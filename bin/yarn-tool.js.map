{"version":3,"file":"yarn-tool.js","sourceRoot":"","sources":["yarn-tool.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport yargs = require('yargs');\nimport updateNotifier = require('update-notifier');\nimport pkg = require('../package.json');\nimport { console, consoleDebug, findRoot, fsYarnLock, yarnLockDiff } from '../lib/index';\nimport path = require('path');\nimport fs = require('fs-extra');\nimport crossSpawn = require('cross-spawn-extra');\nimport { Dedupe } from '../lib/cli/dedupe';\nimport { flagsYarnAdd } from '../lib/cli/add';\n\nupdateNotifier({ pkg }).notify();\n\nlet cli = yargs\n\t.option('cwd', {\n\t\tdesc: `current working directory or package directory`,\n\t\tnormalize: true,\n\t\tdefault: process.cwd(),\n\t})\n\t.option('skipCheckWorkspace', {\n\t\tdesc: `this options is for search yarn.lock, pkg root, workspace root, not same as --ignore-workspace-root-check`,\n\t\tboolean: true,\n\t})\n\t.help(true)\n\t.showHelpOnFail(true)\n\t.strict()\n;\n\ninterface ICachedCommond\n{\n\t[cmd: string]: {\n\t\tbuilder: <U>(yarg: yargs.Argv<any>) => yargs.Argv<U>\n\t\thandler: <T>(args: yargs.Arguments<T>) => void\n\t}\n}\n\nconst cached_commond: ICachedCommond = {};\n\ncli = cli\n//.usage('$0 <dedupe> [cwd]')\n\t.command('dedupe [cwd]', `Data deduplication for yarn.lock`, ...create_commond(cli, 'dedupe', (argv) =>\n\t{\n\t\tlet root = findRoot(argv);\n\t\tlet hasWorkspace = root.ws != null;\n\n\t\tlet yarnlock_cache = fsYarnLock(root.root);\n\n\t\tlet { yarnlock_file, yarnlock_exists, yarnlock_old } = yarnlock_cache;\n\n\t\tconsoleDebug.info(`Deduplication yarn.lock`);\n\t\tconsoleDebug.gray.info(`${yarnlock_file}`);\n\n\t\tif (!yarnlock_exists)\n\t\t{\n\t\t\tconsoleDebug.error(`yarn.lock not exists`);\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet ret = Dedupe(yarnlock_old);\n\n\t\tlet msg = yarnLockDiff(ret.yarnlock_old, ret.yarnlock_new);\n\n\t\tif (msg)\n\t\t{\n\t\t\tfs.writeFileSync(yarnlock_file, ret.yarnlock_new);\n\n\t\t\tconsole.log(msg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsoleDebug.warn(`yarn.lock no need data deduplication`);\n\t\t}\n\t}))\n\t.command('add [name]', ``, (yargs) =>\n\t{\n\t\treturn yargs\n\t\t\t.option('dev', {\n\t\t\t\talias: 'D',\n\t\t\t\tdesc: `install packages to devDependencies.`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('peer', {\n\t\t\t\talias: 'P',\n\t\t\t\tdesc: `install packages to peerDependencies.`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('optional', {\n\t\t\t\talias: 'O',\n\t\t\t\tdesc: `install packages to optionalDependencies.`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('exact', {\n\t\t\t\talias: 'E',\n\t\t\t\tdesc: `see https://yarnpkg.com/lang/en/docs/cli/add/`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('tilde', {\n\t\t\t\talias: 'T',\n\t\t\t\tdesc: `see https://yarnpkg.com/lang/en/docs/cli/add/`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('audit', {\n\t\t\t\tdesc: `see https://yarnpkg.com/lang/en/docs/cli/add/`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option(`name`, {\n\t\t\t\ttype: 'string',\n\t\t\t\tdemandOption: true,\n\t\t\t})\n\t\t\t.option('dedupe', {\n\t\t\t\talias: ['d'],\n\t\t\t\tdesc: `Data deduplication for yarn.lock`,\n\t\t\t\tboolean: true,\n\t\t\t\tdefault: true,\n\t\t\t})\n\t\t\t.option('ignore-workspace-root-check', {\n\t\t\t\talias: ['W'],\n\t\t\t\tdesc: `see https://yarnpkg.com/lang/en/docs/cli/add/`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t;\n\t}, (argv) =>\n\t{\n\n\t\tlet args = argv._.slice();\n\n\t\tif (args[0] === 'add')\n\t\t{\n\t\t\targs.shift();\n\t\t}\n\n\t\tif (argv.name)\n\t\t{\n\t\t\targs.unshift(argv.name);\n\t\t}\n\n\t\t//console.dir(argv);\n\n\t\tif (!args.length)\n\t\t{\n//\t\t\tyargs.showHelp();\n\n\t\t\tconsoleDebug.error(`Missing list of packages to add to your project.`);\n\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\tconst { cwd } = argv;\n\n\t\tlet cmd_argv = [\n\t\t\t'add',\n\n\t\t\t...args,\n\n\t\t\t...flagsYarnAdd(argv),\n\n\t\t].filter(v => v != null);\n\n\t\tconsoleDebug.debug(cmd_argv);\n\n\t\tlet { dedupe } = argv;\n\n\t\tconst root = findRoot(argv).root;\n\n\t\tlet yarnlock_cache = fsYarnLock(root);\n\n\t\tif (!yarnlock_cache || !yarnlock_cache.yarnlock_exists)\n\t\t{\n\t\t\tdedupe = false;\n\t\t}\n\t\telse if (dedupe)\n\t\t{\n\t\t\tlet ret = Dedupe(yarnlock_cache.yarnlock_old);\n\n\t\t\tif (ret.yarnlock_changed)\n\t\t\t{\n\t\t\t\tfs.writeFileSync(yarnlock_cache.yarnlock_file, ret.yarnlock_new);\n\n\t\t\t\tconsoleDebug.info(`Deduplication yarn.lock`);\n\t\t\t\tconsoleDebug.gray.info(`${yarnlock_cache.yarnlock_file}`);\n\n\t\t\t\tlet msg = yarnLockDiff(yarnlock_cache.yarnlock_old, ret.yarnlock_new);\n\n\t\t\t\tif (msg)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(msg);\n\t\t\t\t}\n\n\t\t\t\tyarnlock_cache.yarnlock_old = ret.yarnlock_new;\n\t\t\t}\n\t\t}\n\n\t\tlet cp = crossSpawn.sync('yarn', cmd_argv, {\n\t\t\tcwd,\n\t\t\tstdio: 'inherit',\n\t\t});\n\n\t\tif (cp.error)\n\t\t{\n\t\t\tthrow cp.error\n\t\t}\n\n\t\tif (0 && dedupe)\n\t\t{\n\t\t\tlet yarnlock_cache2 = fsYarnLock(root);\n\n\t\t\tif (yarnlock_cache2 && yarnlock_cache2.yarnlock_exists)\n\t\t\t{\n\t\t\t\tlet msg = yarnLockDiff(yarnlock_cache.yarnlock_old, yarnlock_cache2.yarnlock_old);\n\n\t\t\t\tif (msg)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t})\n\t.command('install', `this will do [dedupe , install , dedupe , install]`, dummy, function (argv)\n\t{\n\t\tconst { cwd } = argv;\n\t\tconst root = findRoot(argv).root;\n\t\tlet yarnlock_cache = fsYarnLock(root);\n\n\t\tif (yarnlock_cache.yarnlock_exists)\n\t\t{\n\t\t\tlet ret1 = Dedupe(yarnlock_cache.yarnlock_old);\n\n\t\t\tif (ret1.yarnlock_changed)\n\t\t\t{\n\t\t\t\tfs.writeFileSync(yarnlock_cache.yarnlock_file, ret1.yarnlock_new);\n\t\t\t}\n\n\t\t\tlet cp = crossSpawn.sync('yarn', [], {\n\t\t\t\tcwd,\n\t\t\t\tstdio: 'inherit',\n\t\t\t});\n\n\t\t\tlet ret2 = Dedupe(fs.readFileSync(yarnlock_cache.yarnlock_file, 'utf8'));\n\n\t\t\tif (ret2.yarnlock_changed)\n\t\t\t{\n\t\t\t\tfs.writeFileSync(yarnlock_cache.yarnlock_file, ret2.yarnlock_new);\n\n\t\t\t\tconsoleDebug.debug(`yarn.lock changed, do install again`);\n\n\t\t\t\tlet cp = crossSpawn.sync('yarn', [], {\n\t\t\t\t\tcwd,\n\t\t\t\t\tstdio: 'inherit',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet msg = yarnLockDiff(yarnlock_cache.yarnlock_old, fs.readFileSync(yarnlock_cache.yarnlock_file, 'utf8'));\n\n\t\t\tif (msg)\n\t\t\t{\n\t\t\t\tconsole.log(msg);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsoleDebug.error(`yarn.lock not exists`);\n\n\t\t\tlet cp = crossSpawn.sync('yarn', [], {\n\t\t\t\tcwd,\n\t\t\t\tstdio: 'inherit',\n\t\t\t});\n\t\t}\n\t})\n\t.command('help', 'Show help', (yarg) => {\n\n\t\tyargs.showHelp('log');\n\n\t\treturn yargs;\n\t})\n\t.demandCommand()\n;\n\ncli.argv;\n\nfunction dummy<T>(yarg: yargs.Argv<T>)\n{\n\treturn yarg\n}\n\nfunction create_commond<T, U extends T>(yarg: yargs.Argv<T>,\n\tcommond: string,\n\thandler: (args: yargs.Arguments<U>) => void,\n\tbuilder?: (yarg: yargs.Argv<T>) => yargs.Argv<U>,\n)\n{\n\t// @ts-ignore\n\tbuilder = builder || dummy;\n\n\tcached_commond[commond] = {\n\t\t// @ts-ignore\n\t\tbuilder,\n\t\t// @ts-ignore\n\t\thandler,\n\t};\n\n\treturn [builder, handler] as const\n}\n\nfunction call_commond<T, U>(yarg: yargs.Argv<T>, commond: string, argv?: yargs.Arguments<U>)\n{\n\treturn cached_commond[commond].handler(argv == null ? yarg.argv : argv)\n}\n"]}