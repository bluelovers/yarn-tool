{"version":3,"file":"yarn-tool.js","sourceRoot":"","sources":["yarn-tool.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH,+BAAgC;AAChC,kDAAmD;AACnD,uCAAwC;AACxC,wCAAyF;AAEzF,+BAAgC;AAChC,gDAAiD;AACjD,8CAA2C;AAC3C,wCAA8C;AAE9C,cAAc,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;AAEjC,KAAK;KACH,MAAM,CAAC,KAAK,EAAE;IACd,IAAI,EAAE,gDAAgD;IACtD,SAAS,EAAE,IAAI;IACf,OAAO,EAAE,OAAO,CAAC,GAAG,EAAE;CACtB,CAAC;IACF,6BAA6B;KAC5B,OAAO,CAAC,cAAc,EAAE,kCAAkC,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,EAAE;IAE5E,IAAI,IAAI,GAAG,gBAAQ,CAAC,IAAI,CAAC,CAAC;IAC1B,IAAI,YAAY,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC;IAEnC,IAAI,cAAc,GAAG,kBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAE3C,IAAI,EAAE,aAAa,EAAE,eAAe,EAAE,YAAY,EAAE,GAAG,cAAc,CAAC;IAGtE,oBAAY,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;IAC7C,oBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,CAAC;IAE3C,IAAI,CAAC,eAAe,EACpB;QACC,oBAAY,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAE3C,OAAO;KACP;IAED,IAAI,GAAG,GAAG,eAAM,CAAC,YAAY,CAAC,CAAC;IAE/B,IAAI,GAAG,GAAG,oBAAY,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,YAAY,CAAC,CAAC;IAE3D,IAAI,GAAG,EACP;QACC,eAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KACjB;SAED;QACC,oBAAY,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;KAC1D;AACF,CAAC,CAAC;KACD,OAAO,CAAC,YAAY,EAAE,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE;IACpC,OAAO,KAAK;SACV,MAAM,CAAC,KAAK,EAAE;QACd,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,sCAAsC;QAC5C,OAAO,EAAE,IAAI;KACb,CAAC;SACD,MAAM,CAAC,MAAM,EAAE;QACf,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,uCAAuC;QAC7C,OAAO,EAAE,IAAI;KACb,CAAC;SACD,MAAM,CAAC,UAAU,EAAE;QACnB,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,2CAA2C;QACjD,OAAO,EAAE,IAAI;KACb,CAAC;SACD,MAAM,CAAC,OAAO,EAAE;QAChB,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,+CAA+C;QACrD,OAAO,EAAE,IAAI;KACb,CAAC;SACD,MAAM,CAAC,OAAO,EAAE;QAChB,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,+CAA+C;QACrD,OAAO,EAAE,IAAI;KACb,CAAC;SACD,MAAM,CAAC,6BAA6B,EAAE;QACtC,KAAK,EAAE,GAAG;QACV,IAAI,EAAE,+CAA+C;QACrD,OAAO,EAAE,IAAI;KACb,CAAC;SACD,MAAM,CAAC,OAAO,EAAE;QAChB,IAAI,EAAE,+CAA+C;QACrD,OAAO,EAAE,IAAI;KACb,CAAC;SACD,MAAM,CAAC,MAAM,EAAE;QACf,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,IAAI;KAClB,CAAC;SACD,MAAM,CAAC,QAAQ,EAAE;QACjB,KAAK,EAAE,CAAC,GAAG,CAAC;QACZ,IAAI,EAAE,kCAAkC;QACxC,OAAO,EAAE,IAAI;KACb,CAAC,CACF;AACF,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE;IAEX,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EACvB;QACC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KACzB;IAED,IAAI,IAAI,CAAC,IAAI,EACb;QACC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,oBAAoB;IAEpB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,EAClB;QACF,sBAAsB;QAEnB,oBAAY,CAAC,KAAK,CAAC,kDAAkD,CAAC,CAAC;QAEvE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;IAED,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IAErB,IAAI,QAAQ,GAAG;QACd,KAAK;QAEL,GAAG,IAAI,CAAC,CAAC;QAET,GAAG,kBAAY,CAAC,IAAI,CAAC;KAErB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC;IAEzB,oBAAY,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAE7B,IAAI,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;IAEtB,MAAM,IAAI,GAAG,gBAAQ,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;IAEjC,IAAI,cAAc,GAAG,MAAM,IAAI,kBAAU,CAAC,IAAI,CAAC,CAAC;IAEhD,IAAI,CAAC,cAAc,IAAI,CAAC,cAAc,CAAC,eAAe,EACtD;QACC,MAAM,GAAG,KAAK,CAAC;KACf;SAED;QACC,IAAI,GAAG,GAAG,eAAM,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAE9C,IAAI,GAAG,CAAC,gBAAgB,EACxB;YACC,cAAc,CAAC,YAAY,GAAG,GAAG,CAAC,YAAY,CAAC;YAE/C,EAAE,CAAC,aAAa,CAAC,cAAc,CAAC,aAAa,EAAE,cAAc,CAAC,YAAY,CAAC,CAAC;YAE5E,oBAAY,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAC7C,oBAAY,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,aAAa,EAAE,CAAC,CAAC;SAC1D;KACD;IAED,IAAI,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,EAAE;QAC1C,GAAG;QACH,KAAK,EAAE,SAAS;KAChB,CAAC,CAAC;IAEH,IAAI,EAAE,CAAC,KAAK,EACZ;QACC,MAAM,EAAE,CAAC,KAAK,CAAA;KACd;IAED,IAAI,MAAM,EACV;QACC,IAAI,eAAe,GAAG,kBAAU,CAAC,IAAI,CAAC,CAAC;QAEvC,IAAI,eAAe,IAAI,eAAe,CAAC,eAAe,EACtD;YACC,IAAI,GAAG,GAAG,oBAAY,CAAC,cAAc,CAAC,YAAY,EAAE,eAAe,CAAC,YAAY,CAAC,CAAC;YAElF,IAAI,GAAG,EACP;gBACC,eAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACjB;SACD;KACD;AAEF,CAAC,CAAC;KACD,aAAa,EAAE;KACf,IAAI,CAAC,IAAI,CAAC;KACV,cAAc,CAAC,IAAI,CAAC;KACpB,IAAI,CACL;AAED,SAAS,KAAK,CAAI,IAAmB;IAEpC,OAAO,IAAI,CAAA;AACZ,CAAC","sourcesContent":["/**\n * Created by user on 2019/4/30.\n */\n\nimport yargs = require('yargs');\nimport updateNotifier = require('update-notifier');\nimport pkg = require('../package.json');\nimport { console, consoleDebug, findRoot, fsYarnLock, yarnLockDiff } from '../lib/index';\nimport path = require('path');\nimport fs = require('fs-extra');\nimport crossSpawn = require('cross-spawn-extra');\nimport { Dedupe } from '../lib/cli/dedupe';\nimport { flagsYarnAdd } from '../lib/cli/add';\n\nupdateNotifier({ pkg }).notify();\n\nyargs\n\t.option('cwd', {\n\t\tdesc: `current working directory or package directory`,\n\t\tnormalize: true,\n\t\tdefault: process.cwd(),\n\t})\n\t//.usage('$0 <dedupe> [cwd]')\n\t.command('dedupe [cwd]', `Data deduplication for yarn.lock`, dummy, (argv) =>\n\t{\n\t\tlet root = findRoot(argv);\n\t\tlet hasWorkspace = root.ws != null;\n\n\t\tlet yarnlock_cache = fsYarnLock(root.root);\n\n\t\tlet { yarnlock_file, yarnlock_exists, yarnlock_old } = yarnlock_cache;\n\n\n\t\tconsoleDebug.info(`Deduplication yarn.lock`);\n\t\tconsoleDebug.gray.info(`${yarnlock_file}`);\n\n\t\tif (!yarnlock_exists)\n\t\t{\n\t\t\tconsoleDebug.error(`yarn.lock not exists`);\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet ret = Dedupe(yarnlock_old);\n\n\t\tlet msg = yarnLockDiff(ret.yarnlock_old, ret.yarnlock_new);\n\n\t\tif (msg)\n\t\t{\n\t\t\tconsole.log(msg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsoleDebug.warn(`yarn.lock no need data deduplication`);\n\t\t}\n\t})\n\t.command('add [name]', ``, (yargs) => {\n\t\treturn yargs\n\t\t\t.option('dev', {\n\t\t\t\talias: 'D',\n\t\t\t\tdesc: `install packages to devDependencies.`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('peer', {\n\t\t\t\talias: 'P',\n\t\t\t\tdesc: `install packages to peerDependencies.`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('optional', {\n\t\t\t\talias: 'O',\n\t\t\t\tdesc: `install packages to optionalDependencies.`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('exact', {\n\t\t\t\talias: 'E',\n\t\t\t\tdesc: `see https://yarnpkg.com/lang/en/docs/cli/add/`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('tilde', {\n\t\t\t\talias: 'T',\n\t\t\t\tdesc: `see https://yarnpkg.com/lang/en/docs/cli/add/`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('ignore-workspace-root-check', {\n\t\t\t\talias: 'W',\n\t\t\t\tdesc: `see https://yarnpkg.com/lang/en/docs/cli/add/`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option('audit', {\n\t\t\t\tdesc: `see https://yarnpkg.com/lang/en/docs/cli/add/`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t.option(`name`, {\n\t\t\t\ttype: 'string',\n\t\t\t\tdemandOption: true,\n\t\t\t})\n\t\t\t.option('dedupe', {\n\t\t\t\talias: ['d'],\n\t\t\t\tdesc: `Data deduplication for yarn.lock`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t;\n\t}, (argv) => {\n\n\t\tif (argv._[0] === 'add')\n\t\t{\n\t\t\targv._ = argv._.slice(1);\n\t\t}\n\n\t\tif (argv.name)\n\t\t{\n\t\t\targv._.unshift(argv.name);\n\t\t}\n\n\t\t//console.dir(argv);\n\n\t\tif (!argv._.length)\n\t\t{\n//\t\t\tyargs.showHelp();\n\n\t\t\tconsoleDebug.error(`Missing list of packages to add to your project.`);\n\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\tconst { cwd } = argv;\n\n\t\tlet cmd_argv = [\n\t\t\t'add',\n\n\t\t\t...argv._,\n\n\t\t\t...flagsYarnAdd(argv),\n\n\t\t].filter(v => v != null);\n\n\t\tconsoleDebug.debug(cmd_argv);\n\n\t\tlet { dedupe } = argv;\n\n\t\tconst root = findRoot(argv).root;\n\n\t\tlet yarnlock_cache = dedupe && fsYarnLock(root);\n\n\t\tif (!yarnlock_cache || !yarnlock_cache.yarnlock_exists)\n\t\t{\n\t\t\tdedupe = false;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet ret = Dedupe(yarnlock_cache.yarnlock_old);\n\n\t\t\tif (ret.yarnlock_changed)\n\t\t\t{\n\t\t\t\tyarnlock_cache.yarnlock_old = ret.yarnlock_new;\n\n\t\t\t\tfs.writeFileSync(yarnlock_cache.yarnlock_file, yarnlock_cache.yarnlock_old);\n\n\t\t\t\tconsoleDebug.info(`Deduplication yarn.lock`);\n\t\t\t\tconsoleDebug.gray.info(`${yarnlock_cache.yarnlock_file}`);\n\t\t\t}\n\t\t}\n\n\t\tlet cp = crossSpawn.sync('yarn', cmd_argv, {\n\t\t\tcwd,\n\t\t\tstdio: 'inherit',\n\t\t});\n\n\t\tif (cp.error)\n\t\t{\n\t\t\tthrow cp.error\n\t\t}\n\n\t\tif (dedupe)\n\t\t{\n\t\t\tlet yarnlock_cache2 = fsYarnLock(root);\n\n\t\t\tif (yarnlock_cache2 && yarnlock_cache2.yarnlock_exists)\n\t\t\t{\n\t\t\t\tlet msg = yarnLockDiff(yarnlock_cache.yarnlock_old, yarnlock_cache2.yarnlock_old);\n\n\t\t\t\tif (msg)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(msg);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t})\n\t.demandCommand()\n\t.help(true)\n\t.showHelpOnFail(true)\n\t.argv\n;\n\nfunction dummy<T>(yarg: yargs.Argv<T>)\n{\n\treturn yarg\n}\n"]}