{"version":3,"file":"yarn-tool.js","sourceRoot":"","sources":["yarn-tool.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n\nimport yargs = require('yargs');\nimport updateNotifier = require('update-notifier');\nimport pkg = require('../package.json');\nimport { console, consoleDebug, findRoot, fsYarnLock, yarnLockDiff } from '../lib/index';\nimport path = require('path');\nimport fs = require('fs-extra');\nimport crossSpawn = require('cross-spawn-extra');\nimport { Dedupe, infoFromDedupeCache, wrapDedupe } from '../lib/cli/dedupe';\nimport { existsDependencies, flagsYarnAdd, setupYarnAddToYargs, listToTypes } from '../lib/cli/add';\nimport setupYarnInstallToYargs from '../lib/cli/install';\n\nupdateNotifier({ pkg }).notify();\n\nlet cli = yargs\n\t.option('cwd', {\n\t\tdesc: `current working directory or package directory`,\n\t\tnormalize: true,\n\t\tdefault: process.cwd(),\n\t})\n\t.option('skipCheckWorkspace', {\n\t\tdesc: `this options is for search yarn.lock, pkg root, workspace root, not same as --ignore-workspace-root-check`,\n\t\tboolean: true,\n\t})\n\t.help(true)\n\t.showHelpOnFail(true)\n\t.strict()\n;\n\ninterface ICachedCommond\n{\n\t[cmd: string]: {\n\t\tbuilder: <U>(yarg: yargs.Argv<any>) => yargs.Argv<U>\n\t\thandler: <T>(args: yargs.Arguments<T>) => void\n\t}\n}\n\nconst cached_commond: ICachedCommond = {};\n\ncli = cli\n//.usage('$0 <dedupe> [cwd]')\n\t.command('dedupe [cwd]', `Data deduplication for yarn.lock`, ...create_commond(cli, 'dedupe', (argv) =>\n\t{\n\t\tlet root = findRoot(argv, true);\n\t\tlet hasWorkspace = root.ws != null;\n\n\t\tlet yarnlock_cache = fsYarnLock(root.root);\n\n\t\tlet { yarnlock_file, yarnlock_exists, yarnlock_old } = yarnlock_cache;\n\n\t\tconsoleDebug.info(`Deduplication yarn.lock`);\n\t\tconsoleDebug.gray.info(`${yarnlock_file}`);\n\n\t\tif (!yarnlock_exists)\n\t\t{\n\t\t\tconsoleDebug.error(`yarn.lock not exists`);\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet ret = Dedupe(yarnlock_old);\n\n\t\tlet msg = yarnLockDiff(ret.yarnlock_old, ret.yarnlock_new);\n\n\t\tif (msg)\n\t\t{\n\t\t\tfs.writeFileSync(yarnlock_file, ret.yarnlock_new);\n\n\t\t\tconsole.log(msg);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsoleDebug.warn(`yarn.lock no need data deduplication`);\n\t\t}\n\t}))\n\t.command('add [name]', ``, (yargs) =>\n\t{\n\t\treturn setupYarnAddToYargs(yargs)\n\t\t\t.option('types', {\n\t\t\t\tdesc: `try auto install @types/*`,\n\t\t\t\tboolean: true,\n\t\t\t})\n\t\t\t;\n\t}, (argv) =>\n\t{\n\n\t\tlet args = argv._.slice();\n\n\t\tif (args[0] === 'add')\n\t\t{\n\t\t\targs.shift();\n\t\t}\n\n\t\tif (argv.name)\n\t\t{\n\t\t\targs.unshift(argv.name);\n\t\t}\n\n\t\t//console.dir(argv);\n\n\t\tif (!args.length)\n\t\t{\n//\t\t\tyargs.showHelp();\n\n\t\t\tconsoleDebug.error(`Missing list of packages to add to your project.`);\n\n\t\t\treturn process.exit(1);\n\t\t}\n\n\t\twrapDedupe(yargs, argv, {\n\n\t\t\tmain(yarg, argv, cache)\n\t\t\t{\n\t\t\t\tlet flags = flagsYarnAdd(argv).filter(v => v != null);\n\n\t\t\t\tlet cmd_argv = [\n\t\t\t\t\t'add',\n\n\t\t\t\t\t...args,\n\n\t\t\t\t\t...flags,\n\n\t\t\t\t].filter(v => v != null);\n\n\t\t\t\tconsoleDebug.debug(cmd_argv);\n\n\t\t\t\tlet cp = crossSpawn.sync('yarn', cmd_argv, {\n\t\t\t\t\tcwd: argv.cwd,\n\t\t\t\t\tstdio: 'inherit',\n\t\t\t\t});\n\n\t\t\t\tif (cp.error)\n\t\t\t\t{\n\t\t\t\t\tthrow cp.error\n\t\t\t\t}\n\n\t\t\t\tif (argv.types)\n\t\t\t\t{\n\t\t\t\t\tlet { rootData } = cache;\n\n\t\t\t\t\tlet pkg_file = path.join(rootData.pkg, 'package.json');\n\n\t\t\t\t\tlet pkg = fs.readJSONSync(pkg_file);\n\n\t\t\t\t\tlet args_types = listToTypes(args);\n\n\t\t\t\t\tif (args_types.length)\n\t\t\t\t\t{\n\t\t\t\t\t\targs_types\n\t\t\t\t\t\t\t.forEach(name =>\n\t\t\t\t\t\t\t{\n\n\t\t\t\t\t\t\t\tif (existsDependencies(name, pkg))\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tlet cmd_argv = [\n\t\t\t\t\t\t\t\t\t'add',\n\n\t\t\t\t\t\t\t\t\tname,\n\n\t\t\t\t\t\t\t\t\t...flags,\n\n\t\t\t\t\t\t\t\t].filter(v => v != null);\n\n\t\t\t\t\t\t\t\tconsoleDebug.debug(cmd_argv);\n\n\t\t\t\t\t\t\t\tlet cp = crossSpawn.sync('yarn', cmd_argv, {\n\t\t\t\t\t\t\t\t\tcwd: argv.cwd,\n\t\t\t\t\t\t\t\t\t//stdio: 'inherit',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tend(yarg, argv, cache)\n\t\t\t{\n\t\t\t\tif (cache.yarnlock_msg)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(cache.yarnlock_msg);\n\t\t\t\t}\n\n\t\t\t\tconsole.dir(infoFromDedupeCache(cache));\n\t\t\t},\n\t\t});\n\n\t})\n\t.command('install [cwd]', `do dedupe when yarn install`, (yargs) =>\n\t{\n\t\treturn setupYarnInstallToYargs(yargs);\n\t}, function (argv)\n\t{\n\t\tconst { cwd } = argv;\n\n\t\tlet _once = true;\n\n\t\twrapDedupe(yargs, argv, {\n\n\t\t\tbefore(yarg, argv, cache)\n\t\t\t{\n\t\t\t\tlet info = infoFromDedupeCache(cache);\n\n\t\t\t\tif (!info.yarnlock_old_exists)\n\t\t\t\t{\n\t\t\t\t\tcrossSpawn.sync('yarn', [], {\n\t\t\t\t\t\tcwd,\n\t\t\t\t\t\tstdio: 'inherit',\n\t\t\t\t\t});\n\n\t\t\t\t\t_once = false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tmain(yarg, argv, cache)\n\t\t\t{\n\t\t\t\tlet info = infoFromDedupeCache(cache);\n\n\t\t\t\tif (info.yarnlock_changed)\n\t\t\t\t{\n\t\t\t\t\tconsoleDebug.debug(`yarn.lock changed, do install again`);\n\t\t\t\t}\n\n\t\t\t\tif (_once || info.yarnlock_changed)\n\t\t\t\t{\n\t\t\t\t\tcrossSpawn.sync('yarn', [], {\n\t\t\t\t\t\tcwd,\n\t\t\t\t\t\tstdio: 'inherit',\n\t\t\t\t\t});\n\n\t\t\t\t\t_once = true;\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tafter(yarg, argv, cache)\n\t\t\t{\n\t\t\t\tlet info = infoFromDedupeCache(cache);\n\n\t\t\t\tif (_once && info.yarnlock_changed)\n\t\t\t\t{\n\t\t\t\t\tconsoleDebug.debug(`yarn.lock changed, do install again`);\n\n\t\t\t\t\tcrossSpawn.sync('yarn', [], {\n\t\t\t\t\t\tcwd,\n\t\t\t\t\t\tstdio: 'inherit',\n\t\t\t\t\t});\n\n\t\t\t\t\t_once = false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tend(yarg, argv, cache)\n\t\t\t{\n\t\t\t\tif (cache.yarnlock_msg)\n\t\t\t\t{\n\t\t\t\t\tconsole.log(cache.yarnlock_msg);\n\t\t\t\t}\n\n\t\t\t\tconsole.dir(infoFromDedupeCache(cache));\n\t\t\t},\n\n\t\t});\n\n\t\treturn;\n\n\t\t/*\n\n\t\tconst { cwd } = argv;\n\t\tconst root = findRoot(argv, true).root;\n\t\tlet yarnlock_cache = fsYarnLock(root);\n\n\t\tif (yarnlock_cache.yarnlock_exists)\n\t\t{\n\t\t\tlet ret1 = Dedupe(yarnlock_cache.yarnlock_old);\n\n\t\t\tif (ret1.yarnlock_changed)\n\t\t\t{\n\t\t\t\tfs.writeFileSync(yarnlock_cache.yarnlock_file, ret1.yarnlock_new);\n\t\t\t}\n\n\t\t\tlet cp = crossSpawn.sync('yarn', [], {\n\t\t\t\tcwd,\n\t\t\t\tstdio: 'inherit',\n\t\t\t});\n\n\t\t\tlet ret2 = Dedupe(fs.readFileSync(yarnlock_cache.yarnlock_file, 'utf8'));\n\n\t\t\tif (ret2.yarnlock_changed)\n\t\t\t{\n\t\t\t\tfs.writeFileSync(yarnlock_cache.yarnlock_file, ret2.yarnlock_new);\n\n\t\t\t\tconsoleDebug.debug(`yarn.lock changed, do install again`);\n\n\t\t\t\tlet cp = crossSpawn.sync('yarn', [], {\n\t\t\t\t\tcwd,\n\t\t\t\t\tstdio: 'inherit',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlet msg = yarnLockDiff(yarnlock_cache.yarnlock_old, fs.readFileSync(yarnlock_cache.yarnlock_file, 'utf8'));\n\n\t\t\tif (msg)\n\t\t\t{\n\t\t\t\tconsole.log(msg);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsoleDebug.error(`yarn.lock not exists`);\n\n\t\t\tlet cp = crossSpawn.sync('yarn', [], {\n\t\t\t\tcwd,\n\t\t\t\tstdio: 'inherit',\n\t\t\t});\n\t\t}\n\n\t\t */\n\t})\n\t.command('help', 'Show help', (yarg) =>\n\t{\n\n\t\tyargs.showHelp('log');\n\n\t\treturn yargs;\n\t})\n\t.demandCommand()\n;\n\ncli.argv;\n\nfunction dummy<T>(yarg: yargs.Argv<T>)\n{\n\treturn yarg\n}\n\nfunction create_commond<T, U extends T>(yarg: yargs.Argv<T>,\n\tcommond: string,\n\thandler: (args: yargs.Arguments<U>) => void,\n\tbuilder?: (yarg: yargs.Argv<T>) => yargs.Argv<U>,\n)\n{\n\t// @ts-ignore\n\tbuilder = builder || dummy;\n\n\tcached_commond[commond] = {\n\t\t// @ts-ignore\n\t\tbuilder,\n\t\t// @ts-ignore\n\t\thandler,\n\t};\n\n\treturn [builder, handler] as const\n}\n\nfunction call_commond<T, U>(yarg: yargs.Argv<T>, commond: string, argv?: yargs.Arguments<U>)\n{\n\treturn cached_commond[commond].handler(argv == null ? yarg.argv : argv)\n}\n"]}